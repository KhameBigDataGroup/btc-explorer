extends layout

block headContent
	title Address #{address}

block content
	if (result && result.validateaddress)
		if (!result.validateaddress.isvalid)
			h1(class="h3 text-danger") Invalid Address
				br
				small(class="monospace") #{address}
		else
			h1(class="h3") Address
				br
				small(class="monospace") #{address}
			
			hr

			if (payoutAddressForMiner)
				div(class="alert alert-primary shadow-sm", style="padding-bottom: 0;")
					div(class="float-left", style="width: 50px; height: 50px; font-size: 18px;")
						i(class="fas fa-certificate fa-2x", style="margin-top: 10px;")

					h4(class="alert-heading h6 font-weight-bold") #{coinConfig.name} Fun

					p
						span This looks like a miner payout address for  
						span(class="font-weight-bold") #{payoutAddressForMiner.name}
						if (coinConfig.miningPoolsConfigUrls.length > 1)
							span  (see the configurations: 
							each item, index in coinConfig.miningPoolsConfigUrls
								if (index > 0)
									span , 
								a(href=item) config ##{index + 1}
							span )
						else
							span  (see the configuration
							a(href=coinConfig.miningPoolsConfigUrls[0]) here
							span )

			ul(class='nav nav-tabs mb-3')
				li(class="nav-item")
					a(data-toggle="tab", href="#tab-details", class="nav-link active", role="tab") Details
				li(class="nav-item")
					a(data-toggle="tab", href="#tab-json", class="nav-link", role="tab") JSON


			div(class="tab-content")
				div(id="tab-details", class="tab-pane active", role="tabpanel")
					div(class="card mb-3 shadow-sm")
						div(class="card-header")
							span(class="h6") Summary
						div(class="card-body")
							div(class="row")
								div(class="col-md-6")

									if (addressObj.hash)
										div(class="row")
											div(class="summary-split-table-label") Hash 160
											div(class="summary-split-table-content monospace") #{addressObj.hash.toString("hex")}

									if (result.validateaddress.scriptPubKey)
										div(class="row")
											div(class="summary-split-table-label") Script Public Key
											div(class="summary-split-table-content monospace") #{result.validateaddress.scriptPubKey}

									if (addressObj.hasOwnProperty("version"))
										div(class="row")
											div(class="summary-split-table-label") Version
											div(class="summary-split-table-content monospace") #{addressObj.version}

									if (result.validateaddress.hasOwnProperty("witness_version"))
										div(class="row")
											div(class="summary-split-table-label") Witness Version
											div(class="summary-split-table-content monospace") #{result.validateaddress.witness_version}

									if (result.validateaddress.witness_program)
										div(class="row")
											div(class="summary-split-table-label") Witness Program
											div(class="summary-split-table-content monospace") #{result.validateaddress.witness_program}

									if (firstSeenTransaction && firstSeenTransaction.confirmations > 0)
										div(class="row")
											div(class="summary-split-table-label") First Seen
											div(class="summary-split-table-content monospace")
												if (getblockchaininfo)
													span Block ##{(getblockchaininfo.blocks - firstSeenTransaction.confirmations).toLocaleString()}
												else
													a(href=("/block/" + firstSeenTransaction.blockhash)) #{firstSeenTransaction.blockhash}

												br

												span #{moment.utc(new Date(firstSeenTransaction.time * 1000)).format("Y-MM-DD HH:mm:ss")} utc
												- var timeAgoTime = firstSeenTransaction.time;
												include includes/time-ago.pug

									if (balance)
										if (balance.conflictedResults)
											div(class="row")
												div(class="summary-split-table-label") Balance
												div(class="summary-split-table-content monospace")
													span(class="text-warning") Conflicted ElectrumX Results

													each item in balance.conflictedResults
														- var currencyValue = item.confirmed / coinConfig.baseCurrencyUnit.multiplier;
														include includes/value-display.pug
														

										else
											div(class="row")
												div(class="summary-split-table-label") Balance
												div(class="summary-split-table-content monospace")
													- var currencyValue = balance.result.confirmed / coinConfig.baseCurrencyUnit.multiplier;
													include includes/value-display.pug

											if (balance.unconfirmed)
												div(class="row")
													div(class="summary-split-table-label") Unconfirmed
													div(class="summary-split-table-content monospace")
														- var currencyValue = balance.unconfirmed / coinConfig.baseCurrencyUnit.multiplier;
														include includes/value-display.pug

									if (addressDetails && addressDetails.balanceSat)
										div(class="row")
											div(class="summary-split-table-label") Balance
											div(class="summary-split-table-content monospace")
												- var currencyValue = new Decimal(addressDetails.balanceSat).dividedBy(coinConfig.baseCurrencyUnit.multiplier);
												include includes/value-display.pug

									if (addressDetails && addressDetails.txCount)
										div(class="row")
											div(class="summary-split-table-label") Transactions
											div(class="summary-split-table-content monospace") #{addressDetails.txCount.toLocaleString()}

									div(class="row")
										div(class="summary-split-table-label") QR Code
										div(class="summary-split-table-content monospace")
											img(src=addressQrCodeUrl, alt=address, style="border: solid 1px #ccc;")

								div(class="col-md-6")
									if (electrumScripthash)
										div(class="row")
											div(class="summary-split-table-label") Scripthash
											div(class="summary-split-table-content monospace") #{electrumScripthash}

									- var x = result.validateaddress;
									- var flagNames = ["Is Valid?", "Is Script?", "Is Witness?", "Is Mine?", "Is Watch-Only?"];
									- var flags = [x.isvalid, x.isscript, x.iswitness, x.ismine, x.iswatchonly];

									each flagName, index in flagNames
										div(class="row")
											div(class="summary-split-table-label") #{flagName}
											div(class="summary-split-table-content monospace")
												if (flags[index])
													i(class="fas fa-check text-success")
												else
													i(class="fas fa-times text-warning")


					div(class="card mb-3 shadow-sm")
						div(class="card-header clearfix")
							div(class="float-left")
								span(class="h6")
									if (addressDetails && addressDetails.txCount)
										if (addressDetails.txCount == 1)
											span 1 Transaction
										else
											span #{addressDetails.txCount.toLocaleString()} Transactions
									else
										span Transactions


							if (txids && txids.length > 1)
								div.float-right
									span.text-muted Newest First

						div(class="card-body")
							if (conflictedTxidResults)
								div(class="alert alert-warning", style="padding-bottom: 0;")
									div(class="float-left", style="width: 55px; height: 50px; font-size: 18px;")
										i(class="fas fa-exclamation-triangle fa-2x", style="margin-top: 10px;")
									h4(class="alert-heading h6 font-weight-bold") Trust Warning
									p
										span The transaction history for this address was requested from mulitple ElectrumX servers and the results did not match. The results below were obtained only from 
										span(class="font-weight-bold") #{electrumHistory.server}

							if (addressApiError && addressApiError.error && addressApiError.error.code && addressApiError.error.code == -32600)
								span Failed to retrieve transaction history from ElectrumX.


							else if (addressApiError && addressApiError.userText)
								div.text-danger Error: #{addressApiError.userText}

							else if (addressDetailsErrors && addressDetailsErrors.length > 0)
								each err in addressDetailsErrors
									if (err.e && err.e.error && err.e.error.message == "history too large")
										span Failed to retrieve transaction history from ElectrumX. 
									else if (err == "No address API configured")
										span No address API is configured.

							else if (transactions.length == 0)
								span No transactions found

							each tx, txIndex in transactions
								//pre
								//	code(class="json bg-light") #{JSON.stringify(tx, null, 4)}
								div(class=("xcard bg-light rounded shadow-sm " + ((txIndex < (transactions.length - 1) || txids.length > limit) ? "mb-4" : "")))
									div(class="card-header monospace clearfix")
										div(class="float-left", style="margin-right: 0px;")
											if (sort == "desc")
												span ##{(addressDetails.txCount - offset - txIndex).toLocaleString()}
											else
												span ##{(offset + txIndex + 1).toLocaleString()}
											span  &ndash;

										div(class="row")
											div(class="col-md-6")
												if (tx && tx.txid)
													a(href=("/tx/" + tx.txid)) #{tx.txid}

											div(class="col-md-6")
												div(class="text-md-right")
													if (tx.time)
														span #{moment.utc(new Date(tx["time"] * 1000)).format("Y-MM-DD HH:mm:ss")} utc
														- var timeAgoTime = tx.time;
														include includes/time-ago.pug

													else
														span(class="text-danger") Unconfirmed

											div(class="col")
												if (addrGainsByTx[tx.txid])
													- var currencyValue = addrGainsByTx[tx.txid];
													span(class="text-success") +
														include includes/value-display.pug

													if (addrLossesByTx[tx.txid])
														span  / 

												if (addrLossesByTx[tx.txid])
													- var currencyValue = addrLossesByTx[tx.txid];
													span(class="text-danger") -
														include includes/value-display.pug
												
									div(class="card-body")
										- var txInputs = txInputsByTransaction[tx.txid];
										- var blockHeight = blockHeightsByTxid[tx.txid];
										- var txIOHighlightAddress = address;

										include includes/transaction-io-details.pug


							if (!crawlerBot && addressDetails && addressDetails.txCount > limit)
								- var txCount = addressDetails.txCount;
								- var pageNumber = offset / limit + 1;
								- var pageCount = Math.floor(txCount / limit);
								- if (pageCount * limit < txCount) {
									- pageCount++;
								- }
								- var paginationUrlFunction = function(x) {
									- return paginationBaseUrl + "&limit=" + limit + "&offset=" + ((x - 1) * limit);
								- }

								hr.mt-3

								include includes/pagination.pug

							
				

				div(id="tab-json", class="tab-pane", role="tabpanel")
					div(class="highlight")
						h4 validateaddress
						pre
							code(class="json bg-light", data-lang="json") #{JSON.stringify(result.validateaddress, null, 4)}

						if (addressDetails)
							h4 addressDetails
							pre
								code.json.bg-light #{JSON.stringify(addressDetails, null, 4)}

		
